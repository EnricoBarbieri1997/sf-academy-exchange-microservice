openapi: 3.0.0
info:
  title: sf-academy exchanger public api
  version: '3.0.0'
servers:
  - url: http://api:8080
    description: Development server
components:
  securitySchemes:
    Token:
      name: authorization
      in: header
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    OperationStatus:
      type: boolean
    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    User:
      type: object
      properties:
        name:
          type: string
        iban:
          type: string
    SignUpParam:
      allOf:
        - $ref: '#/components/schemas/Login'
        - $ref: '#/components/schemas/User'
    LoginResponse:
      type: string
    Amount:
      type: object
      properties:
        value:
          type: number
        currency:
          type: string
    BuyParam:
      type: object
      properties:
        from:
          $ref: '#/components/schemas/Amount'
        to:
          type: string
    Transaction:
      type: object
      properties:
        spent:
          $ref: '#/components/schemas/Amount'
        gained:
          $ref: '#/components/schemas/Amount'
        timestamp:
          type: string
    Transactions:
      type: array
      items:
        $ref: '#/components/schemas/Transaction'
  parameters:
    UserId:
      name: id
      in: path
      description: id to be passed in path
      required: true
      schema:
        type: number
paths:
  /status:
    get:
      operationId: status
      description: Status page
      responses:
        200:
          description: A status page
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
  /sign-up:
    post:
      operationId: signUp
      description: Register a new user
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpParam'
      responses:
        200:
          description: Status of the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
  /login:
    post:
      operationId: login
      description: Login a user
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
      responses:
        200:
          description: JWT Token to use in authentication header for future requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /deposit:
    post:
      operationId: deposit
      description: Deposit a certain amount of a currency
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amount'
      responses:
        200:
          description: Status of the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
      security:
        -
          Token: []
  /withdraw:
    post:
      operationId: withdraw
      description: Withdraw a certain amount of a currency
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amount'
      responses:
        200:
          description: Status of the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
      security:
        -
          Token: []
  /buy:
    post:
      operationId: buy
      description: Buy a certain amount of a currency from another
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyParam'
      responses:
        200:
          description: Status of the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
      security:
        -
          Token: []
  /transactions/list/{id}:
    get:
      operationId: listTransactions
      description: List all the transactions of a certain user
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        200:
          description: The user transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transactions'