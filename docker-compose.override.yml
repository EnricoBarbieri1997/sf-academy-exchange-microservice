version: '3.8'
services:
  api:
    volumes:
      - ./ApiGateway/src:/usr/src/app/src
      - ./ApiGateway/index.ts:/usr/src/app/index.ts
    command: ["npm", "run", "start"]
  exchange:
    volumes:
      - ./Services/Exchange/src:/usr/src/app/src
      - ./Services/Exchange/index.ts:/usr/src/app/index.ts
      - ./Services/Exchange/.env:/usr/src/app/.env
    command: ["npm", "run", "start"]
  users:
    volumes:
      - ./Services/Users/src:/usr/src/app/src
      - ./Services/Users/index.ts:/usr/src/app/index.ts
    env_file:
      - ./BuildingBlocks/Envs/database.dev.env
    command: ["npm", "run", "start"]
  web:
    build:
      context: ./Web
      dockerfile: ./Dockerfile
    volumes:
      - ./Web/pages:/usr/src/app/pages
      - ./Web/public:/usr/src/app/public
      - ./Web/styles:/usr/src/app/styles
    command: ["npm", "run", "dev"]
    ports:
      - 3000:3000
    networks:
      - external
  database:
    image: postgres
    volumes:
      - ./DevTemp/Database:/var/lib/postgresql/data
    env_file:
      - ./BuildingBlocks/Envs/database.dev.env
  adminer:
    image: adminer
    restart: on-failure
    ports:
      - 8080:8080
